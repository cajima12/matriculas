package org.ayuncordoba.eseg.modelo;

import java.io.Serializable;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

@Entity
@Table(name="unidades")
public class Unidad implements Serializable {
	private static final long serialVersionUID = -4877422241381768029L;

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Long id;
	
	@Column(name="referencia_interna")
	private String refCodigo;
	
	private String nombre;
	
	private String codigo;
	
	//bi-directional many-to-one association to Dir3
	@OneToOne(optional=true)
	@JoinColumn(name="dir3_id")
	private Dir3 unidadDir3;	

	// bi-directional many-to-many association to Documentos
	@ManyToMany(mappedBy = "unidades")
	private List<Documento> documentos;
	
	// bi-directional many-to-many association to Procedimientos
	@ManyToMany( fetch = FetchType.EAGER, cascade=CascadeType.ALL)
	@Fetch(value = FetchMode.SUBSELECT)
	@JoinTable(
		name 				= "unidades_procedimientos", 
		joinColumns 		= { @JoinColumn(name = "unidades_id") }, 
		inverseJoinColumns 	= { @JoinColumn(name = "procedimientos_id")	})
	private List<Procedimiento> procedimientos;
	
	@ManyToOne
	@JoinColumn(name="padre_id")
	private Unidad padre;
	
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getRefCodigo() {
		return refCodigo;
	}

	public void setRefCodigo(String refCodigo) {
		this.refCodigo = refCodigo;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public String getCodigo() {
		return codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	public Dir3 getUnidadDir3() {
		return unidadDir3;
	}

	public void setUnidadDir3(Dir3 unidadDir3) {
		this.unidadDir3 = unidadDir3;
	}

	public List<Documento> getDocumentos() {
		return documentos;
	}

	public void setDocumentos(List<Documento> documentos) {
		this.documentos = documentos;
	}

	public List<Procedimiento> getProcedimientos() {
		return procedimientos;
	}

	public void setProcedimientos(List<Procedimiento> procedimientos) {
		this.procedimientos = procedimientos;
	}

	public Unidad getPadre() {
		return padre;
	}

	public void setPadre(Unidad padre) {
		this.padre = padre;
	}

	@Override
	public String toString() {
		return "Unidad [id=" + id + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((nombre == null) ? 0 : nombre.hashCode());
		result = prime * result
				+ ((refCodigo == null) ? 0 : refCodigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Unidad other = (Unidad) obj;
		if (codigo == null) {
			if (other.codigo != null)
				return false;
		} else if (!codigo.equals(other.codigo))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (nombre == null) {
			if (other.nombre != null)
				return false;
		} else if (!nombre.equals(other.nombre))
			return false;
		if (refCodigo == null) {
			if (other.refCodigo != null)
				return false;
		} else if (!refCodigo.equals(other.refCodigo))
			return false;
		return true;
	}
	

}
