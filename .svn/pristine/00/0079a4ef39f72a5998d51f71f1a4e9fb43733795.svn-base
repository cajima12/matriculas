package org.ayuncordoba.eseg.modelo;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@Table(name="metafases")
public class Metafase implements Serializable {

	private static final long serialVersionUID = 6860487763511492236L;
	
	@Id
    @GeneratedValue(strategy=GenerationType.AUTO, generator="METAFASES_SEQ")
    @SequenceGenerator(name="METAFASES_SEQ", sequenceName="METAFASES_SEQ")
	private Long id;
	
	@Column(name="nombre")
	private String nombreMetafase;
	
	@OneToMany(mappedBy="metafase", fetch = FetchType.EAGER)
	private List<Fase> subFases;
	
	// bi-directional many-to-many association to Unidad
	@ManyToMany(mappedBy = "metafases")
	private List<Procedimiento> procedimientos;

	public Metafase() {
		// TODO Auto-generated constructor stub
	}

	public Metafase(String nombreMetafase, List<Fase> subFases) {
		this.nombreMetafase = nombreMetafase;
		this.subFases = subFases;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getNombreMetafase() {
		return nombreMetafase;
	}

	public void setNombreMetafase(String nombreMetafase) {
		this.nombreMetafase = nombreMetafase;
	}

	public List<Fase> getSubFases() {
		return subFases;
	}

	public void setSubFases(List<Fase> subFases) {
		this.subFases = subFases;
	}

	public List<Procedimiento> getProcedimientos() {
		return procedimientos;
	}

	public void setProcedimientos(List<Procedimiento> procedimientos) {
		this.procedimientos = procedimientos;
	}

	@Override
	public String toString() {
		return "Metafase [id=" + id + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((nombreMetafase == null) ? 0 : nombreMetafase.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Metafase other = (Metafase) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (nombreMetafase == null) {
			if (other.nombreMetafase != null)
				return false;
		} else if (!nombreMetafase.equals(other.nombreMetafase))
			return false;
		return true;
	}


	
}
