<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- Enable method level Spring Security by annotations  -->
    <sec:global-method-security pre-post-annotations="enabled" />  
   	<sec:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager" >
		
		<sec:intercept-url pattern="/faces/pages/secure/**" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/pages/secure/**" access="hasRole('ROLE_ADMIN')" />
		
		<sec:intercept-url pattern="/faces/pages/secure/**" access="isAuthenticated()" />
		<sec:intercept-url pattern="/pages/secure/**" access="isAuthenticated()" />
        <sec:intercept-url pattern="/applet/**" access="permitAll"/>
        <sec:intercept-url pattern="/faces/pages/unsecure/**" access="permitAll"/>
        <sec:intercept-url pattern="/pages/unsecure/**" access="permitAll"/>
        <sec:intercept-url pattern="/javax.faces.resource/**" access="permitAll"/>
        <sec:intercept-url pattern="/faces/javax.faces.resource/**" access="permitAll"/>
        <sec:form-login login-page="/login.xhtml" authentication-failure-url="/login.xhtml" />
        <sec:logout invalidate-session="true" delete-cookies="JSESSIONID" logout-success-url="/login.xhtml" />
		<sec:session-management invalid-session-url="/login.xhtml" />
		<sec:custom-filter ref="sessionManagementFilter" before="SESSION_MANAGEMENT_FILTER" />
    </sec:http>
   
    <!-- Set customUserDetailsService class as the authentication Manager for Spring Security-->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="customUserDetailsService">
 <!--            <sec:password-encoder hash="md5"></sec:password-encoder> -->
        </sec:authentication-provider>
    </sec:authentication-manager>
    
   	<bean  id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter" >
		<constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository" />
	</bean>
	
	<bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
   
    <bean id="externalAuthenticationManager" name="externalAuthenticationManager" class="org.ksoft.matriculas.login.ExternalAuthenticationManager">
        <property name="peticionLoginRepo" ref="peticionLoginRepositorio"/>
        <property name="customUserDetailsService" ref="customUserDetailsService"/>
    </bean>
      
</beans>